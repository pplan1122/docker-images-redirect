name: docker_images_push

on: push

jobs:
  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      filenames: ${{ steps.filenames.outputs.filenames}}

    steps:
      - name: check out localrepo
        uses: actions/checkout@v4

      - name: porcess the file
        id: filenames
        run: |
          json="files=["
          first=true
          # mapfile -t ARRAY_FILENAMES < <(cat docker-images | awk '$1 !~ /^#/ {if($1)print}')

          while IFS= read -r line; do
            read -r IMAGE_NAME IMAGE_TAG <<< "$( echo $line | awk '{split($1,array,":");print array[1],array[2]}')" 

            echo $IMAGE_NAME
            if [ "$first" = "true" ]; then
              first=false
              json="$json{"
            else
              json="$json,{"
            fi
            json="$json\"name\":$IMAGE_NAME\""
            
            IMAGE_TAG=$(echo "$IMAGE_TAG" | sed 's/@[^/]*//g')
            if [ -z $IMAGE_TAG ];then
              IMAGE_TAG="latest"
            fi 
            json="$json,\"tag\":$IMAGE_TAG\""

            IMAGE_PLATFORM=$(echo $line | awk '$0 ~/--platform/ {split($0,array,/--platform[ |=]/); print array[2]}'| awk '{print $1}')
            if [ -z $IMAGE_PLATFORM ];then
              json="$json"
            else  
              json="$json,\"platform\":\"$IMAGE_PLATFORM\""
            fi

            REPO=$(echo $line | awk '$0 ~/--repo/ {split($0,array,/--repo[ |=]/); print array[2]}'| awk '{print $1}')
            if [ -z $REPO ];then
              json="$json"
            else   
              json="$json,\"repo\":\"$REPO\""
            fi
            json="$json}"
          done <<< "$( cat docker-images | awk '$1 !~ /^#/ {if($1)print}')"
          json="$json]"

          echo "$json"
          echo "$json" >> "$GITHUB_OUTPUT"

          
  # get-images: 
  #   needs: define-matrix
  #   strategy:
  #     matrix:
  #       filename: ${{ fromJSON(needs.define-matrix.outputs.filenames) }}      
  #   uses: ./.github/workflows/docker_pull_one.yaml
  #   with:
  #     filename: ${{matrix.filename}}
  #     repo_name: ${{vars.ALIYUN_REPO_NAME}}
  #   secrets: inherit
