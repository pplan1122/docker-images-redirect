name: docker_pull_one

on: 
  workflow_call:
    inputs:
      name:
        required: true
        description: 'docker image name'
        type: string
      tag:
        description: 'docker image tag'
        type: string
      platform:
        description: 'docker image target platform'
        type: string
      repopull:
        description: 'repo for pull'
        type: string
      repopush:
        description: 'repo for push'
        type: string  


jobs:
  pull-images:
    runs-on: ubuntu-latest
    steps:
      - name: docker login for pull
        run: |
          echo ${{inputs.repopull}}
          repopull = ${{inputs.repopull}}/_/.
          echo $rep-_pull
          echo "${{secrets[format('{0}_PASSWORD',inputs.repopull)]}}" | docker login $repopull -u "${{secrets[format('{0}_USERNAME',inputs.repopull)]}}" --password-stdin
      
      - name: docker pull
        id: docker_pull
        run: |
          repopull = ${{inputs.repopull}}/_/. 
          docker pull ${{ $repopull}}/${{ inputs.name }}:${{ inputs.tag }}

      - name: docker login for push
        run: echo "${{secrets.ALIYUN_PASSWORD}}" | docker login ${{ inputs.repopush }} -u "${{secrets.ALIYUN_USERNAME}}" --password-stdin
  
      - name: save as a tar and push to Aliyun
        id: push_and_tar
        run: |
          IMAGE_ID=$(docker images | grep ${{ inputs.name }}| grep ${{ inputs.tag }}| awk '{if(NR==1)print $3}')
          docker save -o ${{inputs.name}}-${{inputs.tag}}.tar $IMAGE_ID
          docker tag "$IMAGE_ID" ${{inputs.repopush}}/${{github.actor}}/${{ inputs.name }}:${{ inputs.tag }}
          docker push ${{inputs.repopush}}/${{github.actor}}/${{ inputs.name }}:${{ inputs.tag }}
          echo "tar_name=${{ inputs.name }}:${{ inputs.tag }}.tar" >> $GITHUB_OUTPUT

      - name: get image
        uses: actions/upload-artifact@v4
        with:
          name: ${{steps.push_and_tar.outputs.tar_name}}
          path: ${{steps.push_and_tar.outputs.tar_name}}
        
      
          
